{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\n\n// Créer un slice pour gérer les tâches\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: [],\n  reducers: {\n    addTask: (state, action) => {\n      // Ajouter une nouvelle tâche avec une propriété revoke par défaut\n      state.push({\n        ...action.payload,\n        revoke: false\n      });\n    },\n    revokeTask: (state, action) => {\n      const task = state.find(task => task.id === action.payload);\n      if (task) {\n        task.revoke = !task.revoke; // Inverse l'état `revoke`\n      }\n    },\n    deleteTask: (state, action) => {\n      // Supprimer une tâche par son ID\n      const id = action.payload;\n      return state.filter(task => task.id !== id);\n    },\n    editTask: (state, action) => {\n      const {\n        id,\n        name\n      } = action.payload;\n      const task = state.find(task => task.id === id);\n      if (task) {\n        task.name = name; // Mise à jour du nom de la tâche\n      }\n    }\n  }\n});\n\n// Exporter les actions\nexport const {\n  addTask,\n  revokeTask,\n  deleteTask,\n  editTask\n} = tasksSlice.actions;\n\n// Créer le store\nconst store = configureStore({\n  reducer: {\n    tasks: tasksSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","tasksSlice","name","initialState","reducers","addTask","state","action","push","payload","revoke","revokeTask","task","find","id","deleteTask","filter","editTask","actions","store","reducer","tasks"],"sources":["C:/Users/MSI/Desktop/les tps react/todo-app/src/store/store.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\r\n\r\n// Créer un slice pour gérer les tâches\r\nconst tasksSlice = createSlice({\r\n  name: 'tasks',\r\n  initialState: [],\r\n  reducers: {\r\n    addTask: (state, action) => {\r\n      // Ajouter une nouvelle tâche avec une propriété revoke par défaut\r\n      state.push({ ...action.payload, revoke: false});\r\n    },\r\n    revokeTask: (state, action) => {\r\n        const task = state.find((task) => task.id === action.payload);\r\n        if (task) {\r\n          task.revoke = !task.revoke; // Inverse l'état `revoke`\r\n        }\r\n      },\r\n    deleteTask: (state, action) => {\r\n      // Supprimer une tâche par son ID\r\n      const id = action.payload\r\n      return state.filter((task) => task.id !== id);\r\n    },\r\n    editTask: (state, action) => {\r\n      const { id, name } = action.payload;\r\n      const task = state.find((task) => task.id === id);\r\n      if (task) {\r\n        task.name = name; // Mise à jour du nom de la tâche\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\n// Exporter les actions\r\nexport const { addTask, revokeTask, deleteTask ,editTask } = tasksSlice.actions;\r\n\r\n// Créer le store\r\nconst store = configureStore({\r\n  reducer: {\r\n    tasks: tasksSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;;AAE9D;AACA,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B;MACAD,KAAK,CAACE,IAAI,CAAC;QAAE,GAAGD,MAAM,CAACE,OAAO;QAAEC,MAAM,EAAE;MAAK,CAAC,CAAC;IACjD,CAAC;IACDC,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMK,IAAI,GAAGN,KAAK,CAACO,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKP,MAAM,CAACE,OAAO,CAAC;MAC7D,IAAIG,IAAI,EAAE;QACRA,IAAI,CAACF,MAAM,GAAG,CAACE,IAAI,CAACF,MAAM,CAAC,CAAC;MAC9B;IACF,CAAC;IACHK,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC7B;MACA,MAAMO,EAAE,GAAGP,MAAM,CAACE,OAAO;MACzB,OAAOH,KAAK,CAACU,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKA,EAAE,CAAC;IAC/C,CAAC;IACDG,QAAQ,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAM;QAAEO,EAAE;QAAEZ;MAAK,CAAC,GAAGK,MAAM,CAACE,OAAO;MACnC,MAAMG,IAAI,GAAGN,KAAK,CAACO,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKA,EAAE,CAAC;MACjD,IAAIF,IAAI,EAAE;QACRA,IAAI,CAACV,IAAI,GAAGA,IAAI,CAAC,CAAC;MACpB;IACF;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEG,OAAO;EAAEM,UAAU;EAAEI,UAAU;EAAEE;AAAS,CAAC,GAAGhB,UAAU,CAACiB,OAAO;;AAE/E;AACA,MAAMC,KAAK,GAAGpB,cAAc,CAAC;EAC3BqB,OAAO,EAAE;IACPC,KAAK,EAAEpB,UAAU,CAACmB;EACpB;AACF,CAAC,CAAC;AAEF,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}